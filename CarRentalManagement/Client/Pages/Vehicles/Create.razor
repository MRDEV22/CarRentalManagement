@page "/vehicles/create"
@inject HttpClient client
@inject NavigationManager navManager

<h3 class="card-title">Create New Vehicle</h3>

<EditForm Model="@vehicle" OnValidSubmit="CreateVehicle">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label>Brand: </label>
        <div>
            <select @bind="vehicle.BrandId" class="form-control">
                <option value="">--Select Brand--</option>
                @if (Brands != null)
                {
                    foreach (var brand in Brands)
                    {
                        <option value="@brand.Id">@brand.Name</option>
                    }
                }
            </select>
            <ValidationMessage For="@(() => vehicle.BrandId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Model: </label>
        <div>
            <InputSelect @bind-Value="vehicle.ModelId" class="form-control">
                <option value="">--Select Model--</option>
                @if (Models != null)
                {
                    foreach (var model in Models)
                    {
                        <option value="@model.Id">@model.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => vehicle.ModelId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Color: </label>
        <div>
            <select @bind="vehicle.ColorId" class="form-control">
                <option value="">--Select Color--</option>
                @if (Colors != null)
                {
                    foreach (var color in Colors)
                    {
                        <option value="@color.Id">@color.Name</option>
                    }
                }
            </select>
            <ValidationMessage For="@(() => vehicle.ColorId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Year:</label>
        <div>
            <InputNumber @bind-Value="@vehicle.Year" class="form-control"/>
            <ValidationMessage For="@(() => vehicle.Year)" />
        </div>
    </div>
    <div class="form-group">
        <label>License Plate Number:</label>
        <div>
            <InputText @bind-Value="@vehicle.LicensePlateNumber" class="form-control"/>
            <ValidationMessage For="@(() => vehicle.LicensePlateNumber)" />
        </div>
    </div>
    <div class="form-group">
        <label>Vehicle Identification Number:</label>
        <div>
            <InputText @bind-Value="@vehicle.Vin" class="form-control"/>
            <ValidationMessage For="@(() => vehicle.Vin)" />
        </div>
    </div>
    <div class="form-group">
        <label>Daily Rate:</label>
        <div>
            <InputNumber @bind-Value="@vehicle.RentalRate" class="form-control"/>
            <ValidationMessage For="@(() => vehicle.RentalRate)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Vehicle
    </button>

</EditForm>

@code {
    Vehicle vehicle = new Vehicle();
    private IList<Brand> Brands;
    private IList<Model> Models;
    private IList<Color> Colors;

    protected async override Task OnInitializedAsync()
    {
        Brands = await client.GetFromJsonAsync<List<Brand>>($"{Endpoints.BrandsEndpoint}");
        Colors = await client.GetFromJsonAsync<List<Color>>($"{Endpoints.ColorsEndpoint}");
        Models = await client.GetFromJsonAsync<List<Model>>($"{Endpoints.ModelsEndpoint}");
    }

    private async Task CreateVehicle()
    {
        await client.PostAsJsonAsync(Endpoints.VehiclesEndpoint, vehicle);
        navManager.NavigateTo("/vehicles/");
    }
}
